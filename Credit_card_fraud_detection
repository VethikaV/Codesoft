# CREDIT-CARD-FRAUD-DETECTION
import numpy as np
import pandas as pd
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
#loading the data set to the pandas Dataframe
credit_card_data=pd.read_csv('/content/fraudTrain.csv')
#first five rows of the dataset
print(credit_card_data.head())
#last five rows of the dataset
print(credit_card_data.tail())
#Dataset description
print(credit_card_data.describe())
#Dataset information
print(credit_card_data.info())
#checking the number of missing value in each column
print(credit_card_data.isnull().sum())
credit_card_data.dropna(inplace=True)
#checking the number of missing value in each column
credit_card_data.isnull().sum()
X = credit_card_data.drop(columns=['is_fraud'])
y = credit_card_data['is_fraud']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
# Select only numeric columns
numeric_columns = X_train.select_dtypes(include=['float64', 'int64']).columns
# Standardize only numeric features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train[numeric_columns])
X_test_scaled = scaler.transform(X_test[numeric_columns])
# Model training
# Logistic Regression
log_reg_model = LogisticRegression()
log_reg_model.fit(X_train_scaled, y_train)
from sklearn.ensemble import RandomForestClassifier
# Random Forest
rf_model = RandomForestClassifier()
rf_model.fit(X_train_scaled, y_train)
# Model evaluation
# Logistic Regression
y_pred_log_reg = log_reg_model.predict(X_test_scaled)
print("Logistic Regression:")
print(classification_report(y_test, y_pred_log_reg))
print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred_log_reg))
# Random Forest
y_pred_rf = rf_model.predict(X_test_scaled)
print("\nRandom Forest:")
print(classification_report(y_test, y_pred_rf))
print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred_rf))
